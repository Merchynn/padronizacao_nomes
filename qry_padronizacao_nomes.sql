--CREATE OR REPLACE TABLE `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_TARGET_TABLE]` AS
-- qualquer duvida quanto a manutenção da query me chamar LM171843
WITH TB_ESPECIALISTA_ONCO_IMUNO AS
(
  SELECT DISTINCT
  COD_SERVICO_MATERIAL_MEDICAMENTO,
  TRIM(UPPER(DSC_SERVICO_MEDICAMENTO)) AS DSC_SERVICO_MEDICAMENTO,
  DSC_PADRAO_SERVICO_MEDICAMENTO,
  DSC_PRINCIPIO_ATIVO_MEDICAMENTO,
  DSC_CLASSIFICACAO_MEDICAMENTO,
  DSC_CLASSIFICACAO_MEDICAMENTO_AGRUPADO,
  DSC_PADRAO_CLASSIFICACAO_MEDICamento,
  DSC_CLASSIFICACAO_VIA_ACESSO,
  FROM `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_TABLE_ONCOLOGY_IMMUNOBIOLOGY_SPECIALIST]`
)

,TB_INSUMO AS
(
  SELECT DISTINCT
  CAST(COD_TUSS_CONSOLIDADO__c AS NUMERIC) AS COD_TUSS_CONSOLIDADO__c,
  DSC_TERMO__c,
  DSC_PRINCIPIO_ATIVO__c
  FROM `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_SUPPLY_TABLE]`
  WHERE FRM_TIPO_REGISTRO__c = 'Medicamento'
)


,TB_FAT_ITEM AS
(
  SELECT DISTINCT
    CONCAT(
        CAST(COD_DOCUMENTO_SINISTRO AS STRING),
        CAST(COD_COMPLEMENTO_SINISTRO AS STRING),
        CAST(COD_ORIGEM_PRESTADOR AS STRING),
        CAST(COD_SEQUENCIA_SINISTRO AS STRING),
        CAST(COD_ANEXO_ITEM_SERVICO_SINISTRO AS STRING),
        CAST(COD_ITEM_SERVICO_SINISTRO AS STRING)
    ) AS COD_CHAVE_MAT_MED,
      CONCAT(
        SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE,
            CASE
        WHEN SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE = 'RJ' --tratativa para o estado do rio que por vezes começa com um 52 antes dos 6 digitos
        AND LENGTH(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING)) > 6
        AND SUBSTR(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING), 1, 2) = '52'
        THEN SUBSTR(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING), 3)
        ELSE CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING)
    END ,
        SGL_CONSELHO_PROFISSIONAL_SOLICITANTE
    ) as CHAVE_MEDICO,
    FLG_INTERNACAO,
    CASE
            WHEN SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE = 'RJ'
            AND LENGTH(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING)) > 6
            AND SUBSTR(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING), 1, 2) = '52'
            THEN SUBSTR(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING), 3)
            ELSE CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING)
        END
     AS NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE
  FROM
    `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_CLAIM_ITEM_SERVICE_FACT_TABLE]`
  WHERE 1=1
    AND DSC_TIPO_SINISTRO = 'REDE'
)

,TB_MED_REFERENCIADO as (SELECT DISTINCT
        CONCAT(SIG_UF_CRM, NUM_CRM, SIG_PROFISSIONAL) as CHAVE_MEDICO,
        SIG_UF_CRM,
        NUM_CRM,SIG_PROFISSIONAL,
        NME_PROFISSIONAL,
        case when DSC_CBO_CFM = 'NÃO CADASTRADO' then DSC_CBO_ATENDIMENTO else DSC_CBO_CFM end as CBO_PROFISSIONAL ,
    FROM `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_REFERENCED_DOCTOR_INDICATORS_FACT_TABLE]` med_referenciado )

,TB_MATERIAL_MEDICAMENTOS AS
(
  SELECT
  CAST(CONCAT(CAST(COD_DOCUMENTO_SINISTRO AS STRING),CAST(COD_COMPLEMENTO_SINISTRO AS STRING),CAST(COD_ORIGEM_PRESTADOR AS STRING),CAST(COD_SEQUENCIA_SINISTRO AS STRING),CAST(COD_ANEXO_ITEM_SERVICO_SINISTRO AS STRING),CAST(COD_ITEM_SERVICO_SINISTRO AS STRING)) AS STRING) AS COD_CHAVE_MAT_MED, NUM_VPP,
  COD_SERVICO_MATERIAL_MEDICAMENTO AS COD_SERVICO_MATERIAL_MEDICAMENTO_ORIGEM,
  DSC_SERVICO_MATERIAL_MEDICAMENTO AS DSC_SERVICO_MATERIAL_MEDICAMENTO_ORIGEM,
  CAST(COD_SERVICO_MATERIAL_MEDICAMENTO AS INTEGER) AS COD_SERVICO_MATERIAL_MEDICAMENTO,--Tranformando o codigo em inteiro
  TRIM(UPPER(DSC_SERVICO_MATERIAL_MEDICAMENTO)) AS DSC_SERVICO_MATERIAL_MEDICAMENTO,
  TRIM(UPPER(DSC_PRINCIPIO_ATIVO_MEDICAMENTO)) AS DSC_PRINCIPIO_ATIVO_MEDICAMENTO_ORIGEM,--Dado base de origem transformadno a variável em maiúsculo e tirando os do espaços
  DAT_EXECUCAO_SINISTRO,

  COD_CARTEIRINHA_BENEFICIario,COD_VII,
  COD_PRESTADOR,
  NME_PRESTADOR,
  SIG_UF_PRESTADOR,
  DSC_CLASSIFICACAO_PRESTADOR,
  concat(COD_PRESTADOR,DAT_EXECUCAO_SINISTRO,COD_CARTEIRINHA_BENEFICIARIO) COD_ATENDIMENTO,
  SUM(VAL_PAGO_MATERIAL_MEDICAMENTO) AS VAL_PAGO_MATERIAL_MEDICAMENTO,

  FROM `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_ITEM_SERVICE_MATERIAL_MOVEMENT_TABLE]`
  WHERE COD_SERVICO=61430013 AND COD_SITUACAO_GUIA=90 AND COD_SITUACAO_ITEM_SERVICO IN(90)

  GROUP BY ALL
)

,TB_MEDICAMENTO_CLASSIFICADO AS
(
  SELECT
  MEDICAMENTO.*,
  IFNULL(ESP_ONCO_IMUNO.DSC_PADRAO_SERVICO_MEDICAMENTO,'NÃO CLASSIFICADO') AS DSC_PADRAO_SERVICO_MEDICAMENTO,
  IFNULL(ESP_ONCO_IMUNO.DSC_PRINCIPIO_ATIVO_MEDICAMENTO,'NÃO CLASSIFICADO') AS DSC_PRINCIPIO_ATIVO_MEDICAMENTO,
  IFNULL(ESP_ONCO_IMUNO.DSC_CLASSIFICACAO_MEDICAMENTO,'NÃO CLASSIFICADO') AS DSC_CLASSIFICACAO_MEDICAMENTO,
  IFNULL(ESP_ONCO_IMUNO.DSC_CLASSIFICACAO_MEDICAMENTO_AGRUPADO,'NÃO CLASSIFICADO') AS DSC_CLASSIFICACAO_MEDICAMENTO_AGRUPADO,
  IFNULL(ESP_ONCO_IMUNO.DSC_PADRAO_CLASSIFICACAO_MEDICAMENTO,'NÃO CLASSIFICADO') AS DSC_PADRAO_CLASSIFICACAO_MEDICAMENTO,
  IFNULL(ESP_ONCO_IMUNO.DSC_CLASSIFICACAO_VIA_ACESSO,'NÃO CLASSIFICADO') AS DSC_CLASSIFICACAO_VIA_ACESSO,
  INSUMO.DSC_TERMO__c,
  INSUMO.DSC_PRINCIPIO_ATIVO__c,
  CURRENT_DATE() AS DAT_ATUALIZACAO,
  FROM TB_MATERIAL_MEDICAMENTOS MEDICAMENTO

  LEFT JOIN TB_ESPECIALISTA_ONCO_IMUNO ESP_ONCO_IMUNO
  ON  MEDICAMENTO.COD_SERVICO_MATERIAL_MEDICAMENTO = ESP_ONCO_IMUNO.COD_SERVICO_MATERIAL_MEDICAMENTO
  AND MEDICAMENTO.DSC_SERVICO_MATERIAL_MEDICAMENTO = ESP_ONCO_IMUNO.DSC_SERVICO_MEDICAMENTO

  LEFT JOIN TB_INSUMO INSUMO
  ON MEDICAMENTO.COD_SERVICO_MATERIAL_MEDICAMENTO = INSUMO.COD_TUSS_CONSOLIDADO__c
)

,TB_CLASSIFICA_NOVOS_MEDICAMENTOS AS
(
    SELECT
    COD_CHAVE_MAT_MED,
    COD_CARTEIRINHA_BENEFICIARIO,
    COD_SERVICO_MATERIAL_MEDICAMENTO_ORIGEM,
    DSC_SERVICO_MATERIAL_MEDICAMENTO_ORIGEM,
    COD_ATENDIMENTO,
    COD_VII,
    COD_SERVICO_MATERIAL_MEDICAMENTO,
    DSC_SERVICO_MATERIAL_MEDICAMENTO,
    DSC_PRINCIPIO_ATIVO_MEDICAMENTO_ORIGEM,
    DAT_EXECUCAO_SINISTRO,
    VAL_PAGO_MATERIAL_MEDICAMENTO,
    CASE
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%AMBISOME%','%ANBISOME%') THEN 'AMBISOME'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('ANSENTRON%','ANSETRON%') THEN 'ANSENTRON'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%NAUSEDRON%' THEN 'NAUSEDRON'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%ZOFRAN%' THEN 'ZOFRAN'
      WHEN DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%VONAU%' THEN 'VONAU'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('ONDANSETRONA%','%ONDANSETRONA%','%ONDANSENTRONA%','%ONDANSETRON%', '%ODANSETRONA%','%ONDASETRONA%') THEN 'ONDANSETRONA'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%ONDSET%' THEN 'ONDSET'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%LIPURO%') THEN 'LIPURO'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%PROPOVAN%' THEN 'PROPOVAN'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%PROVIVE%' THEN 'PROVIVE'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%FRESOFOL%' THEN 'FRESOFOL'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%PROPOTIL%') THEN 'PROPOTIL'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%SPIVA%' THEN 'SPIVA'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%PROFOLEN%' THEN 'PROFOLEN'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%DIPRIVAN%' THEN 'DIPRIVAN'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%SOLIRIS%' THEN 'SOLIRIS'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%BRIDION%' THEN 'BRIDION'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%BRYONY%' THEN 'BRYONY'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%SUVERSADEX%' THEN 'SUVERSADEX'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%REBRIVE%' THEN 'REBRIVE'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICamento LIKE '%REVERSO%' THEN 'REVERSO'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%LESSAV%' THEN 'LESSAV'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%SUGAMADEX%' THEN 'SUGAMADEX'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%VYNDAQEL%' THEN 'VYNDAQEL'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%EVRYSDI%' THEN 'EVRYSDI'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%SPINRAZA%' THEN 'SPINRAZA'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%REBLOZYL%' THEN 'REBLOZYL'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%DANYELZA%' THEN 'DANYELZA'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%MERONEM%','%MERONEN%') THEN 'MERONEM'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%MEROMAX%') THEN 'MEROMAX'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%MEPENOX%') THEN 'MEPENOX'
      WHEN DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE '%MEROPENEM%' THEN 'MEROPENEM'
      WHEN DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%FERINJECT%','%FERRINJECT%') THEN 'FERINJECT'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%CANABIDIOL%') THEN 'CANABIDIOL'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%ONPATTRO%') THEN 'ONPATTRO'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%KANUMA%') THEN 'KANUMA'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%ULTOMIRIS%') THEN 'ULTOMIRIS'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%XENPOZYME %') THEN 'XENPOZYME'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%MAVENCLAD %') THEN 'MAVENCLAD'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%GADOVIST%') THEN 'GADOVIST'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%GADOBUTROL%') THEN 'GADOBUTROL'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%DOTAREM%','%DOTAREN%') THEN 'DOTAREM'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%CLARISCAN%') THEN 'CLARISCAN'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_SERVICO_MATERIAL_MEDICAMENTO LIKE ANY('%GADOTERICO%') THEN 'ACIDO GADOTERICO'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('TRASTUZUMABE DERUXTECANO') THEN 'TRASTUZUMABE DERUXTECANA'
      WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('BRENTUXIMABE') THEN 'BRENTUXIMABE VEDOTINA'
            ELSE  DSC_PADRAO_SERVICO_MEDICAMENTO
    END AS DSC_PADRAO_SERVICO_MEDICAMENTO,
    DSC_PRINCIPIO_ATIVO_MEDICAMENTO,
    DSC_CLASSIFICACAO_MEDICAMENTO,
    DSC_CLASSIFICACAO_MEDICAMENTO_AGRUPADO,
    DSC_PADRAO_CLASSIFICACAO_MEDICAMENTO,
    DSC_CLASSIFICACAO_VIA_ACESSO,
    DSC_TERMO__c,
    DSC_PRINCIPIO_ATIVO__c,
    DAT_ATUALIZACAO,
    COD_PRESTADOR,
    NME_PRESTADOR,
    SIG_UF_PRESTADOR,NUM_VPP,
    DSC_CLASSIFICACAO_PRESTADOR
   FROM TB_MEDICAMENTO_CLASSIFICADO MEDICAMENTO
)

, CLASSIFICADOS as(
  SELECT
  * EXCEPT(DSC_PRINCIPIO_ATIVO_MEDICAMENTO),
  CASE
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'AMBISOME' THEN 'ANFOTERICINA B'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND
          DSC_PADRAO_SERVICO_MEDICAMENTO IN('ANSENTRON', 'ONDSET','NAUSEDRON', 'VONAU','ONDANSETRONA', 'ZOFRAN')
    THEN 'ONDANSETRONA DI-HIDRATADO'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO'
          AND DSC_PADRAO_SERVICO_MEDICAMENTO IN('BRIDION','BRYONY','SUVERSADEX','LESSAV','REBRIVE','REVERSO','SUGAMADEX')
    THEN 'SUGAMADEX SODICO'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'DANYELZA' THEN 'NAXITAMABE'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND
          DSC_PADRAO_SERVICO_MEDICAMENTO IN ('LIPURO','PROPOVAN','PROVIVE','FRESOFOL','PROPOTIL','SPIVA','PROFOLEN','DIPRIVAN') THEN 'PROPOFOL'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'EVRYSDI' THEN 'RISDIPLAM'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND
          DSC_PADRAO_SERVICO_MEDICAMENTO IN ('MERONEM','MEROPENEM','MEROMAX', 'MEPENOX') THEN 'MEROPENEM'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'REBLOZYL' THEN 'LUSPATERCEPT'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'SOLIRIS' THEN 'ECULIZUMABE'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'SPINRAZA' THEN 'NUSINERSENA'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'VYNDAQEL' THEN 'TAFAMIDIS'
    WHEN  DSC_PRINCIPIO_ATIVO_MEDICAMENTO = 'NÃO CLASSIFICADO' AND DSC_PADRAO_SERVICO_MEDICAMENTO = 'FERINJECT' THEN 'CARBOXIMALTOSE FERRICA'
    WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('CANABIDIOL') THEN 'CANABIDIOL'
    WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('ONPATTRO') THEN 'PATISIRANA SODICA'
    WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('KANUMA') THEN 'ALFASSEBELIPASE'
    WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('ULTOMIRIS') THEN 'RAVULIZUMABE'
    WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('XENPOZYME') THEN 'ALFAOLIPUDASE'
    WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('MAVENCLAD') THEN 'CLADRIBINA'
    WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('GADOVIST', 'GADOBUTROL') THEN 'GADOBUTROL'
    WHEN DSC_PADRAO_SERVICO_MEDICAMENTO IN('DOTAREM', 'CLARISCAN','ACIDO GADOTERICO') THEN 'ACIDO GADOTERICO'
    WHEN DSC_PRINCIPIO_ATIVO_MEDICAMENTO IN('TRASTUZUMABE DERUXTECANO','TRASTUZUMABE DERUXTECANA') THEN 'TRASTUZUMABE DERUXTECANA'
    WHEN DSC_PRINCIPIO_ATIVO_MEDICAMENTO IN('DIMETILSULFOXIDO DE TRAMETINIBE') THEN 'TRAMETINIBE'
    ELSE DSC_PRINCIPIO_ATIVO_MEDICAMENTO
  END AS DSC_PRINCIPIO_ATIVO_MEDICAMENTO
  FROM TB_CLASSIFICA_NOVOS_MEDICAMENTOS
)

,TABELA_MESCLADA AS
(
  SELECT
    C.*,
    MED.FLG_INTERNACAO,
    MED.CHAVE_MEDICO
  FROM
    CLASSIFICADOS C
  LEFT JOIN
    TB_FAT_ITEM MED ON C.COD_CHAVE_MAT_MED = MED.COD_CHAVE_MAT_MED
)


,TB_MEDICO_REF_MESCLADO as (SELECT
  TM.*,
  MED_REF.CBO_PROFISSIONAL ,
  MED_REF.SIG_UF_CRM,
  MED_REF.NUM_CRM,
  MED_REF.SIG_PROFISSIONAL,
  MED_REF.NME_PROFISSIONAL,
FROM
  TABELA_MESCLADA TM
LEFT JOIN
  TB_MED_REFERENCIADO MED_REF ON TM.CHAVE_MEDICO = MED_REF.CHAVE_MEDICO
)


,TB_SOLICITACAO_VPP AS
(
    SELECT DISTINCT
        NUM_SOLICITACAO_VPP,
        NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE,
        SIG_CONSELHO_PROFISSIONAL_SOLICITANTE,
        SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE,
        DAT_INCLUSAO_OPERACIONAL
    FROM
        `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_VPP_REQUEST_MOVEMENT_TABLE]`
    WHERE
        EXTRACT(YEAR FROM DAT_INCLUSAO_OPERACIONAL) = 2024
        AND DSC_STATUS_SOLICITACAO IN ('AUTORIZADO', 'AUTORIZADO PARCIALMENTE')
    QUALIFY(ROW_NUMBER() OVER(PARTITION BY NUM_SOLICITACAO_VPP ORDER BY DAT_INCLUSAO_OPERACIONAL DESC)) = 1
),

TB_SOLIC_UNION AS
(
    SELECT NUM_SOLICITACAO_VPP, NUM_VPP, TRIM(UPPER(NME_PROFISSIONAL_SOLIC)) AS NME_PROFISSIONAL_SOLIC
    FROM `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_HOSPITALIZATION_REQUEST_TABLE]`
    WHERE NUM_VPP IS NOT NULL

    UNION ALL

    SELECT NUM_SOLICITACAO_VPP, NUM_VPP, TRIM(UPPER(NME_PROFISSIONAL_SOLIC)) AS NME_PROFISSIONAL_SOLIC
    FROM `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_SP_SADT_REQUEST_TABLE]`
    WHERE NUM_VPP IS NOT NULL

    UNION ALL

    SELECT NUM_SOLICITACAO_VPP, NUM_VPP, TRIM(UPPER(NME_PROFISSIONAL_SOLIC)) AS NME_PROFISSIONAL_SOLIC
    FROM `[CENSORED_PROJECT_NAME].[CENSORED_DATASET_NAME].[CENSORED_CHEMOTHERAPY_REQUEST_TABLE]`
    WHERE NUM_VPP IS NOT NULL
),

TB_SOLIC_COM_NME_MEDICO AS
(
    SELECT
        SOLICITACAO.*,
        SOLICS_DETALHE.NUM_VPP,
        SOLICS_DETALHE.NME_PROFISSIONAL_SOLIC,
        CONCAT(SOLICITACAO.SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE, SOLICITACAO.NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE, SOLICITACAO.SIG_CONSELHO_PROFISSIONAL_SOLICITANTE) AS CHAVE_MEDICO
    FROM
        TB_SOLICITACAO_VPP AS SOLICITACAO
    INNER JOIN
        TB_SOLIC_UNION AS SOLICS_DETALHE ON SOLICITACAO.NUM_SOLICITACAO_VPP = SOLICS_DETALHE.NUM_SOLICITACAO_VPP
),
TB_NOME_MEDICO_RANKING AS (
    SELECT
        CHAVE_MEDICO,
        NME_PROFISSIONAL_SOLIC,
        ROW_NUMBER() OVER (PARTITION BY CHAVE_MEDICO ORDER BY COUNT(*) DESC) AS RNK
    FROM
        TB_SOLIC_COM_NME_MEDICO
    WHERE
        CHAVE_MEDICO IS NOT NULL
    GROUP BY
        CHAVE_MEDICO,
        NME_PROFISSIONAL_SOLIC
),

TB_NOME_MEDICO_CORRETO AS (
    SELECT
        CHAVE_MEDICO,
        NME_PROFISSIONAL_SOLIC AS NME_PROFISSIONAL_PADRONIZADO
    FROM
        TB_NOME_MEDICO_RANKING
    WHERE
        RNK = 1
),
MEDICO_TRATADO as(
SELECT
    TB_MEDICO_VPP.NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE,
    TB_MEDICO_VPP.SIG_CONSELHO_PROFISSIONAL_SOLICITANTE,
    TB_MEDICO_VPP.SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE,
    TB_MEDICO_VPP.NUM_VPP,
    NOME_CORRETO.NME_PROFISSIONAL_PADRONIZADO AS NME_PROFISSIONAL,
    TB_MEDICO_VPP.CHAVE_MEDICO,
    TB_MEDICO_VPP.DAT_INCLUSAO_OPERACIONAL
FROM
    TB_SOLIC_COM_NME_MEDICO AS TB_MEDICO_VPP
INNER JOIN
    TB_NOME_MEDICO_CORRETO AS NOME_CORRETO ON TB_MEDICO_VPP.CHAVE_MEDICO = NOME_CORRETO.CHAVE_MEDICO
)

,TB_SOLIC_VPP AS (
  SELECT
    VPP.NUM_VPP,
    VPP.NME_PROFISSIONAL,
    VPP.CHAVE_MEDICO,
    CASE
        WHEN SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE = 'RJ'
        AND LENGTH(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING)) > 6
        AND SUBSTR(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING), 1, 2) = '52'
        THEN SUBSTR(CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING), 3)
        ELSE CAST(NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING)
    END AS NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE,
    SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE

  FROM
    MEDICO_TRATADO VPP
    LEFT JOIN TB_MED_REFERENCIADO AS MED
    ON CONCAT(VPP.SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE,
    CASE
        WHEN VPP.SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE = 'RJ'
        AND LENGTH(CAST(VPP.NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING)) > 6
        AND SUBSTR(CAST(VPP.NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING), 1, 2) = '52'
        THEN SUBSTR(CAST(VPP.NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING), 3)
        ELSE CAST(VPP.NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE AS STRING)
    END , VPP.SIG_CONSELHO_PROFISSIONAL_SOLICITANTE) = MED.CHAVE_MEDICO
  --- CORREÇÃO: Garante que haverá apenas uma linha por NUM_VPP, pegando a mais recente.
  QUALIFY ROW_NUMBER() OVER(PARTITION BY VPP.NUM_VPP ORDER BY VPP.DAT_INCLUSAO_OPERACIONAL DESC) = 1
)


,TB_FINAL AS (
  SELECT
  REF_MESCLADO.*,
  VPP.NME_PROFISSIONAL as NME_PROFISSIONAL_VPP,
  VPP.NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE as NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE_VPP,
  VPP.SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE as SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE_VPP,
  VPP.NUM_VPP AS NUM_VPP_BASE
  FROM
  TB_MEDICO_REF_MESCLADO REF_MESCLADO
  LEFT JOIN
  TB_SOLIC_VPP AS VPP
  ON REF_MESCLADO.NUM_VPP = VPP.NUM_VPP
)


,TB_QUANTIDADE_MARCA_PRINC_ATIVO AS
(
  SELECT
  DSC_PRINCIPIO_ATIVO_MEDICAMENTO,
  COUNT(DISTINCT CASE WHEN DSC_PRINCIPIO_ATIVO_MEDICAMENTO != DSC_PADRAO_SERVICO_MEDICAMENTO THEN DSC_PADRAO_SERVICO_MEDICAMENTO END) AS QTD_MARCA
  FROM TB_FINAL
  GROUP BY ALL
)

, final as(SELECT
FIM.*,
MARCA.QTD_MARCA,
CASE
    WHEN NME_PROFISSIONAL <> NME_PROFISSIONAL_VPP AND NME_PROFISSIONAL_VPP IS NOT NULL
    THEN NME_PROFISSIONAL_VPP
    ELSE NME_PROFISSIONAL
END AS NOME_PROFISSIONAL_CONSOLIDADO,
CASE
  WHEN CONCAT(FIM.SIG_UF_CRM, FIM.NUM_CRM) = CONCAT(FIM.SGL_UF_CONSELHO_PROFISSIONAL_SOLICITANTE_VPP,  FIM.NUM_REGISTRO_CONSELHO_PROFISSIONAL_SOLICITANTE_VPP)
  THEN 'V' -- Verdadeiro (iguais)
  ELSE 'F' -- Falso (diferentes ou VPP nulo)
END AS FLG_PROFISSIONAL_CONVERGENTE
FROM TB_FINAL FIM
LEFT JOIN TB_QUANTIDADE_MARCA_PRINC_ATIVO MARCA
ON FIM.DSC_PRINCIPIO_ATIVO_MEDICAMENTO = MARCA.DSC_PRINCIPIO_ATIVO_MEDICAMENTO
)

select * from final --where NUM_VPP is not null
